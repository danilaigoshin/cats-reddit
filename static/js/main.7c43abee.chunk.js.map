{"version":3,"sources":["components/Post.js","components/Posts.js","App.js","index.js"],"names":["Post","post","postsHandler","buttonTitle","data","thumbnail","className","title","media","url_overridden_by_dest","includes","src","alt","gallery_data","preview","reddit_video_preview","fallback_url","controls","width","type","reddit_video","onClick","Posts","posts","map","id","length","App","useState","setPosts","favoritesPosts","setFavoritesPosts","postsLength","useRef","fetchData","a","axios","get","current","res","children","useEffect","loadPostsIfBottomPage","throttle","e","target","scrollHeight","scrollTop","clientHeight","onScroll","useCallback","document","body","addEventListener","removeEventListener","find","el","prev","filter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7c43abee.chunk.js","sourcesContent":["const Post = ({ post, postsHandler, buttonTitle }) => {\r\n  return (\r\n    <>\r\n      {post.data.thumbnail !== 'self' && post.data.thumbnail !== 'default' && (\r\n        <div className='post-block'>\r\n          <h2 className='post-block__title'>{post.data.title}</h2>\r\n\r\n          {!post.data.media &&\r\n            post.data.url_overridden_by_dest &&\r\n            (post.data.url_overridden_by_dest.includes('jpg') ||\r\n              post.data.url_overridden_by_dest.includes('png')) && (\r\n              <div className='post-block__img'>\r\n                <img\r\n                  src={post.data.url_overridden_by_dest}\r\n                  alt={post.data.title}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n          {!post.data.media && post.data.gallery_data && (\r\n            <div className='post-block__img'>\r\n              <img src={post.data.thumbnail} alt={post.data.title} />\r\n            </div>\r\n          )}\r\n\r\n          {post.data.preview &&\r\n            post.data.preview.reddit_video_preview &&\r\n            post.data.preview.reddit_video_preview.fallback_url && (\r\n              <div className='post-block__video'>\r\n                <video controls width='100%'>\r\n                  <source\r\n                    src={post.data.preview.reddit_video_preview.fallback_url}\r\n                    type='video/mp4'\r\n                  />\r\n                </video>\r\n              </div>\r\n            )}\r\n\r\n          {post.data.media && post.data.media.reddit_video && (\r\n            <div className='post-block__video'>\r\n              <video controls width='100%'>\r\n                <source\r\n                  src={post.data.media.reddit_video.fallback_url}\r\n                  type='video/mp4'\r\n                />\r\n              </video>\r\n            </div>\r\n          )}\r\n\r\n          <div className='post-block__button'>\r\n            <button onClick={() => postsHandler(post)} className='button'>\r\n              {buttonTitle}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import Post from './Post';\r\n\r\nconst Posts = ({ posts, postsHandler, buttonTitle, title }) => {\r\n  return (\r\n    <div className='content__items'>\r\n      <h2>{title}</h2>\r\n      {posts.map((post) => {\r\n        return (\r\n          <Post\r\n            key={post.data.id}\r\n            post={post}\r\n            postsHandler={postsHandler}\r\n            buttonTitle={buttonTitle}\r\n          />\r\n        );\r\n      })}\r\n      {!posts.length && <p>На текущий момент нет постов</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import axios from 'axios';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport throttle from 'lodash/throttle';\nimport Posts from './components/Posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [favoritesPosts, setFavoritesPosts] = useState([]);\n  const postsLength = useRef(7);\n\n  const fetchData = async () => {\n    const res = await axios.get(\n      `https://www.reddit.com/r/cats/.json?limit=${postsLength.current}`\n    );\n    setPosts(res.data.data.children);\n\n    postsLength.current += 4;\n  };\n\n  const addToFavoritesPosts = (post) => {\n    const existPost = favoritesPosts.find((el) => el.data.id === post.data.id);\n\n    if (!existPost) {\n      setFavoritesPosts((prev) => [post, ...prev]);\n    }\n  };\n\n  const deleteFromFavoritesPosts = (post) => {\n    setFavoritesPosts((prev) =>\n      prev.filter((el) => el.data.id !== post.data.id)\n    );\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const loadPostsIfBottomPage = throttle((e) => {\n    if (\n      e.target.scrollHeight - e.target.scrollTop <\n      e.target.clientHeight + 300\n    ) {\n      fetchData();\n    }\n  }, 200);\n\n  const onScroll = useCallback(loadPostsIfBottomPage, [loadPostsIfBottomPage]);\n\n  useEffect(() => {\n    document.body.addEventListener('scroll', onScroll);\n    return () => {\n      document.body.removeEventListener('scroll', onScroll);\n    };\n  }, [onScroll]);\n\n  return (\n    <div className='container'>\n      {posts && (\n        <Posts\n          posts={posts}\n          postsHandler={addToFavoritesPosts}\n          title='Посты'\n          buttonTitle='В избранное'\n        />\n      )}\n      {favoritesPosts && (\n        <Posts\n          posts={favoritesPosts}\n          postsHandler={deleteFromFavoritesPosts}\n          title='Избранное'\n          buttonTitle='Удалить'\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}